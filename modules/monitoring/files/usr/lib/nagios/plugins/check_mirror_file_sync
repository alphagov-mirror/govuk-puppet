#!/usr/bin/env bash
set -eou pipefail

STATE_UNKNOWN=3

function usage()
{
cat << EOF
usage: $0 [options]

This script checks the status of the latest transfer job operation which mirrors content from AWS to GCP. 
It relies on the google-cloud-sdk to query the Google Storage Transfer Service API. This script is meant 
for Nagios.

OPTIONS:
    -h or --help           Show this message

    --google_application_credentials_file_path=x    Required: Enter the absolute file path to the Google application credentials file. This should a JSON file
                                                    containing the private key and other credentials that can be used to assume a service account and are available
                                                    to download upon the creation of a key pair. See https://cloud.google.com/docs/authentication/getting-started 
                                                    for more details.

    --gcp_project_id=x                              Required: Enter the GCP project id for the project which owns the Transfer Job specified in the transfer_job_name
                                                    parameter. 

    --transfer_job_name=x                           Required: Enter the Transfer Job name for the job which syncs mirror content to GCP. This can be found in the 
                                                    configuration for the job. If the name starts with transferJobs/, omit this when entering this parameter.

EOF
}

function error()
{
  echo -e "${1}"
}


#
# Awesome parameter parsing, see https://stackoverflow.com/a/14203146
#
for i in "$@"; do
case ${i} in
  --google_application_credentials_file_path=* )
    GOOGLE_APPLICATION_CREDENTIALS_FILE_PATH="${i#*=}"
    shift
    ;;

  --gcp_project_id=* )
    GCP_PROJECT_ID="${i#*=}"
    shift
    ;;

  --transfer_job_name=* )
    TRANSFER_JOB_NAME="${i#*=}"
    shift
    ;;

  help | --help | -h)
    usage
    exit ${STATE_UNKNOWN}
    ;;

  *)
    error "Error, unknown parameter \"${i}\" given!"
    echo
    usage
    exit ${STATE_UNKNOWN}
    ;;
  esac
done

#
# Validation
#

if [[ "${GOOGLE_APPLICATION_CREDENTIALS_FILE_PATH}" == "" ]]; then
    error "You have to supply the absolute file path for the Google credentials file"
    usage
    exit ${STATE_UNKNOWN}
fi

if [[ "${GCP_PROJECT_ID}" == "" ]]; then
    error "You have to supply a Google project id"
    usage
    exit ${STATE_UNKNOWN}
fi

if [[ "${TRANSFER_JOB_NAME}" == "" ]]; then
    error "You have to supply a transfer job name"
    usage
    exit ${STATE_UNKNOWN}
fi

export GOOGLE_APPLICATION_CREDENTIALS="$GOOGLE_APPLICATION_CREDENTIALS_FILE_PATH"

GCP_TRANSFER_SERVICE_TOKEN=$(gcloud auth application-default print-access-token)

latest_operation_name=$(curl --header "Content-Type: application/json" \
  --header "Authorization: Bearer $GCP_TRANSFER_SERVICE_TOKEN" \
  --request GET "https://storagetransfer.googleapis.com/v1/transferJobs/$TRANSFER_JOB_NAME?projectId=$GCP_PROJECT_ID" \
  | jq -r '.latestOperationName')

latest_operation_details=$(curl --header "Content-Type: application/json" \
  --header "Authorization: Bearer $GCP_TRANSFER_SERVICE_TOKEN" \
  --request GET "https://storagetransfer.googleapis.com/v1/$latest_operation_name")

status=$(echo $latest_operation_details | jq -r '.metadata.status')

if [[ "$status" == "SUCCESS" ]]; then
  finish_datetime=$(echo "$latest_operation_details" | jq -r '.metadata.endTime')
  echo "Mirror files successfully synced to GCP at $finish_datetime"
  exit 0
fi

echo "A non-success result was returned - see GCP Storage Transfer Service console for more information."
echo "Failed operation: $latest_operation_name"
exit 1
